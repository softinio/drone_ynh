#!/bin/bash

#=================================================
# GENERIC START
#=================================================

# IMPORT GENERIC HELPERS
source /usr/share/yunohost/helpers

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

# Load common variables and helpers
source ./_common.sh

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
remote_gitea=$YNH_APP_ARG_REMOTE_GITEA
client_id=$YNH_APP_ARG_CLIENT_ID
client_secret=$YNH_APP_ARG_CLIENT_SECRET
path_url="/"
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
rpc_secret=$YNH_APP_ARG_RPC_SECRET

# Check parameters
ynh_webpath_available $domain $path_url || ynh_die "The path ${domain} is not available for app installation."
ynh_webpath_register "$app" "${domain}" "$path_url"

# Check user parameter
ynh_user_exists "$admin" \
|| ynh_die "The chosen admin user does not exist."

# Generate random password and key
dbpass=$(ynh_string_random)

# Choose port
port=$(ynh_find_port 1480)

# Store Settings
ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app mysqlpwd $dbpass
ynh_app_setting_set $app adminusername $admin
ynh_app_setting_set $app is_public $is_public
ynh_app_setting_set $app web_port $port

#=================================================
# INSTALL DEPENDENCIES
#=================================================

# Install and setup Docker
if [ ! -f /usr/bin/docker ]; then
    echo "Installing Docker"
    ynh_install_app_dependencies curl apt-transport-https ca-certificates software-properties-common
  	curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
    add-apt-repository \
     "deb [arch=$DOCKER_ARCH] https://download.docker.com/linux/debian \
     $(lsb_release -cs) \
     stable"
    ynh_install_app_dependencies docker-ce
    yunohost service add docker
  	update-rc.d docker defaults
    systemctl enable docker
  	systemctl start docker
fi

#=================================================
# STANDARD MODIFICATIONS
#=================================================

# Initialize database and store mysql password for upgrade
ynh_mysql_create_db "$dbname" "$dbuser" "$dbpass"

# Create needed directories
create_dir

# Install drone
create_drone_env
create_container

# Configure init script
ynh_replace_string "__APP__" "$app" ../conf/systemd.service
ynh_add_systemd_config

# Modify Nginx configuration file and copy it to Nginx conf directory
config_nginx

#=================================================
# GENERIC FINALIZATION
#=================================================

# Unprotect root from SSO if public
set_access_settings

# Add drone to Yunohost
yunohost service add $app

# Reload services
systemctl reload nginx.service || true
systemctl restart "$app".service || true
